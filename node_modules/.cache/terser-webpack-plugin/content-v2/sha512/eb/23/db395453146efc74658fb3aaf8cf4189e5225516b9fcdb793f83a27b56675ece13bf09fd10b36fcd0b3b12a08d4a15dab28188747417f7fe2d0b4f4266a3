{"code":"!function(e){var n={};function t(o){if(n[o])return n[o].exports;var d=n[o]={i:o,l:!1,exports:{}};return e[o].call(d.exports,d,d.exports,t),d.l=!0,d.exports}t.m=e,t.c=n,t.d=function(e,n,o){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:o})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var d in e)t.d(o,d,function(n){return e[n]}.bind(null,d));return o},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"\",t(t.s=0)}([function(e,n){const t={todos:[]},o=(e,n)=>JOHN_TODOS.put(e,n);async function d(e){const n=\"data-\"+e.headers.get(\"CF-Connecting-IP\");let d;const a=await(r=n,JOHN_TODOS.get(r));var r;a?d=JSON.parse(a):(await o(n,JSON.stringify(t)),d=t);const c=`\\n<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"UTF-8\">\\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\\n    <title>Todos</title>\\n    <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss/dist/tailwind.min.css\" rel=\"stylesheet\"></link>\\n  </head>\\n\\n  <body class=\"bg-blue-100\">\\n    <div class=\"w-full h-full flex content-center justify-center mt-8\">\\n      <div class=\"bg-white shadow-md rounded px-8 pt-6 py-8 mb-4\">\\n        <h1 class=\"block text-grey-800 text-md font-bold mb-2\">Todos</h1>\\n        <div class=\"flex\">\\n          <input class=\"shadow appearance-none border rounded w-full py-2 px-3 text-grey-800 leading-tight focus:outline-none focus:shadow-outline\" type=\"text\" name=\"name\" placeholder=\"A new todo\"></input>\\n          <button class=\"bg-blue-500 hover:bg-blue-800 text-white font-bold ml-2 py-2 px-4 rounded focus:outline-none focus:shadow-outline\" id=\"create\" type=\"submit\">Create</button>\\n        </div>\\n        <div class=\"mt-4\" id=\"todos\"></div>\\n      </div>\\n    </div>\\n  </body>\\n\\n  <script>\\n    window.todos = ${JSON.stringify(d.todos||[]).replace(/</g,\"\\\\u003c\")}\\n\\n    var updateTodos = function() {\\n      fetch(\"/\", { method: 'PUT', body: JSON.stringify({ todos: window.todos }) })\\n      populateTodos()\\n    }\\n\\n    var completeTodo = function(evt) {\\n      var checkbox = evt.target\\n      var todoElement = checkbox.parentNode\\n      var newTodoSet = [].concat(window.todos)\\n      var todo = newTodoSet.find(t => t.id == todoElement.dataset.todo)\\n      todo.completed = !todo.completed\\n      window.todos = newTodoSet\\n      updateTodos()\\n    }\\n\\n    var populateTodos = function() {\\n      var todoContainer = document.querySelector(\"#todos\")\\n      todoContainer.innerHTML = null\\n\\n      window.todos.forEach(todo => {\\n        var el = document.createElement(\"div\")\\n        el.className = \"border-t py-4\"\\n        el.dataset.todo = todo.id\\n\\n        var name = document.createElement(\"span\")\\n        name.className = todo.completed ? \"line-through\" : \"\"\\n        name.textContent = todo.name\\n\\n        var checkbox = document.createElement(\"input\")\\n        checkbox.className = \"mx-4\"\\n        checkbox.type = \"checkbox\"\\n        checkbox.checked = todo.completed ? 1 : 0\\n        checkbox.addEventListener('click', completeTodo)\\n\\n        el.appendChild(checkbox)\\n        el.appendChild(name)\\n        todoContainer.appendChild(el)\\n      })\\n    }\\n\\n    populateTodos()\\n\\n    var createTodo = function() {\\n      var input = document.querySelector(\"input[name=name]\")\\n      if (input.value.length) {\\n        window.todos = [].concat(todos, { id: window.todos.length + 1, name: input.value, completed: false })\\n        input.value = \"\"\\n        updateTodos()\\n      }\\n    }\\n\\n    document.querySelector(\"#create\").addEventListener('click', createTodo)\\n  <\\/script>\\n</html>\\n`;return new Response(c,{headers:{\"Content-Type\":\"text/html\"}})}async function a(e){return\"PUT\"===e.method?async function(e){const n=await e.text(),t=\"data-\"+e.headers.get(\"CF-Connecting-IP\");try{return JSON.parse(n),await o(t,n),new Response(n,{status:200})}catch(e){return new Response(e,{status:500})}}(e):d(e)}addEventListener(\"fetch\",e=>{e.respondWith(a(e.request))})}]);","extractedComments":[]}